Node*build(int in[],int is,int ie,int post[],int ps,int pe,map<int,int>&mp)
{
    if(ps>pe||is>ie)
    {
        return NULL;
    }
    Node*root=new Node(post[pe]);
    int iroot=mp[post[pe]];
    int numsleft=iroot-is;
    root->left=build(in,is,iroot-1,post,ps,ps+numsleft-1,mp);
    root->right=build(in,iroot+1,ie,post,ps+numsleft,pe-1,mp);
    return root;
}
//Function to return a tree created from postorder and inoreder traversals.
Node *buildTree(int in[], int post[], int n) 
{
    // Your code here
    map<int,int>mp;
    for(int i=0;i<n;i++)
    {
        mp[in[i]]=i;
    }
    Node*root=build(in,0,n-1,post,0,n-1,mp);
    return root;
}
