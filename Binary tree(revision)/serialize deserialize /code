  void inorder(Node*root,vector<int>&ans)
    {
        if(root!=NULL)
        {
            inorder(root->left,ans);
            ans.push_back(root->data);
            inorder(root->right,ans);
        }
    }
    vector<int> serialize(Node *root) //serialize yaani normal inorder karke vector mein dal do
    {
        //Your code here
        vector<int>ans;
        inorder(root,ans);
        return ans;
    }
    Node*solve(vector<int>A,int s,int e)
    {
        if(s>e)
        {
            return NULL;
        }
        int mid=(s+e)/2;
        Node*root=new Node(A[mid]);
        root->left=solve(A,s,mid-1);
        root->right=solve(A,mid+1,e);
        return root;
    }
    //Function to deserialize a list and construct the tree.
    Node * deSerialize(vector<int> &A)
    {
       //Your code here
       return solve(A,0,A.size()-1);
    }
