Node* segregate(Node *head)
    {
        
        // Add code here
        Node * zeroHead = new Node(0);
        Node * oneHead = new Node(0);
        Node * twoHead = new Node(0);
        Node * zero = zeroHead, * one = oneHead, *two = twoHead;
        
        Node * curr = head;
        while(curr != NULL)
        {
            // If Value is 0
            if(curr-> data == 0)
            {
                zero-> next = curr;
                zero = zero-> next;
                curr = curr-> next;
            }
            else if(curr-> data == 1)
            {
                one-> next = curr;
                one = one-> next;
                curr = curr-> next;
            }
            else
            {
                two-> next = curr;
                two = two-> next;
                curr = curr-> next;
            }
        }
        zero -> next = (oneHead-> next != NULL) ? (oneHead-> next) : (twoHead-> next);
        one-> next = twoHead-> next;
        two-> next = NULL;
        
        head = zeroHead-> next;
        return head;
    }
