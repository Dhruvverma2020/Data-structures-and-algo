/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> rightSideView(TreeNode* root) 
    {
      vector<int>v;
   queue<TreeNode*>q;
   q.push(root);
   if(root==NULL)
   {
       return v;
   }
   while(q.empty()==false)
   {
       int size=q.size();
       v.push_back(q.front()->val);
       while(size--)
       {
          TreeNode*curr=q.front();
          q.pop();
           if(curr->right!=NULL)
           {
            q.push(curr->right);
           }
           if(curr->left!=NULL)
           {
             q.push(curr->left);
           }
        }
    }
     return v;  
    }
};
