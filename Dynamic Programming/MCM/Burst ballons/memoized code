class Solution {
public:
    static int dp[301][301];
    int solve(vector<int>&nums,int i,int j,int dp[301][301])
    {
        if(i>j)
        {
            return 0;
        }
        if(dp[i][j]!=-1)
        {
            return dp[i][j];
        }
        int maxi=INT_MIN;
        for(int k=i;k<=j;k++)
        {
            int cost=nums[i-1]*nums[k]*nums[j+1]+solve(nums,i,k-1,dp)+solve(nums,k+1,j,dp);
            maxi=max(cost,maxi);
        }
        return dp[i][j]=maxi;
    }
    int maxCoins(vector<int>& nums) 
    {
        int dp[301][301];
        memset(dp,-1,sizeof(dp));
        int n=nums.size();
        nums.push_back(1);
        nums.insert(nums.begin(), 1);
        return solve(nums,1,n,dp);
    }
};
