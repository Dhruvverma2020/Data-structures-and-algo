 int solve(int i,int prev,int a[],int n,vector<vector<int>>&dp)
    {
        if(i==n)
        {
            return 0;
        }
        if(dp[i][prev+1]!=-1)
        {
            return dp[i][prev+1];
        }
        int len=0+solve(i+1,prev,a,n,dp);
        int take=0;
        if(prev==-1||a[i]>a[prev])
        {
         len=max(len,1+solve(i+1,i,a,n,dp));
        }
        return dp[i][prev+1]=len;
    }
    int longestSubsequence(int n, int a[])
    {
       // your code here
      vector<vector<int>>dp(n,vector<int>(n+1,-1));
       int prev=-1;
       return solve(0,-1,a,n,dp);
    }
