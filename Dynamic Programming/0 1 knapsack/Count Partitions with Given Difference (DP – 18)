//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;

// } Driver Code Ends
class Solution {
  public:
     int mod = (int) 1e9+7;
    int countPartitions(int n, int d, vector<int>& arr) 
    {
        // Code here
        int sum=0;
        for(int i=0;i<n;i++)
        {
            sum=sum+arr[i];
        }
        if(sum-d<0||(sum-d)%2==1)
        {
            return 0;
        }
         int x=(sum+d)/2;
        vector<vector<int>>dp(n+1,vector<int>(x+1,-1));
        for(int i=0;i<n+1;i++)
        {
            for(int j=0;j<x+1;j++)
            {
                if(i==0)
                {
                    dp[i][j]=0;
                }
                if(j==0)
                {
                    dp[i][j]=1;
                }
            }
        }
        for(int i=1;i<n+1;i++)
        {
            for(int j=0;j<x+1;j++)
            {
                if(arr[i-1]<=j)
                {
                    dp[i][j]=(dp[i-1][j-arr[i-1]]%mod) + (dp[i-1][j]%mod);
                }
                else if(arr[i-1]>j)
                {
                    dp[i][j]=dp[i-1][j]%mod;
                }
            }
        }
        return dp[n][x]%mod;
        //return solve(n,arr,x);
    }
};

//{ Driver Code Starts.
int main() {
    int t;
    cin >> t;
    while (t--) {
        int n, d;
        cin >> n >> d;
        vector<int> arr;

        for (int i = 0; i < n; ++i) {
            int x;
            cin >> x;
            arr.push_back(x);
        }

        Solution obj;
        cout << obj.countPartitions(n, d, arr) << "\n";
    }
    return 0;
}
// } Driver Code Ends
