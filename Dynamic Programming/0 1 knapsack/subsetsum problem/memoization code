int solve(int n,vector<int>&arr, int sum,vector<vector<int>>&dp)
    {
        if(sum==0)
        {
            return 1;
        }
        else if(n<=0)
        {
            return 0;
        }
        if(dp[n][sum]!=-1)
        {
            return dp[n][sum];
        }
        if(arr[n-1]>sum)
        {
            return dp[n][sum]=solve(n-1,arr,sum,dp);
        }
        else if(arr[n-1]<=sum)
        {
            return dp[n][sum]=solve(n-1,arr,sum-arr[n-1],dp)||solve(n-1,arr,sum,dp);
        }
    }
    bool isSubsetSum(vector<int>arr, int sum)
    {
        // code here 
        int n=arr.size();
        vector<vector<int>>dp(n+1,vector<int>(sum+1,-1));
        return solve(n,arr,sum,dp);
        
    }
