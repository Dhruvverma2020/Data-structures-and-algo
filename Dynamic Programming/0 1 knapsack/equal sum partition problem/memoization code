 int solve(int n,int arr[],vector<vector<int>>&dp,int sum)
    {
        if(sum==0)
        {
            return 1;
        }
        else if(n<=0)
        {
            return 0;
        }
        if(dp[n][sum]!=-1)
        {
            return dp[n][sum];
        }
        if(arr[n-1]<=sum)
        {
            return dp[n][sum]=solve(n-1,arr,dp,sum-arr[n-1])||solve(n-1,arr,dp,sum);
        }
        else if(arr[n-1]>sum)
        {
            return dp[n][sum]=solve(n-1,arr,dp,sum);
        }
    }
    int equalPartition(int n, int arr[])
    {
        // code here
        int sum=0;
        for(int i=0;i<n;i++)
        {
            sum+=arr[i];
        }
        if(sum%2!=0)
        {
            return 0;
        }
        else
        {
              int x=sum/2;
              vector<vector<int>>dp(n+1,vector<int>(x+1,-1));
              return solve(n,arr,dp,x);
        }
        
    }
