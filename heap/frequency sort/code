 class comparator{
        public:
        bool operator()(pair<int,int> a, pair<int,int> b)
        {
            //first condition is min heap and second is decreasing order
            if(a.first!=b.first){
                return a.first>b.first;
            }    
            return a.second<b.second;
        }
        
    };
    vector<int> sortByFreq(int arr[],int n)
    {
        //Your code here
        vector<int>ans;
        unordered_map<int,int>mp;
        for(int i=0;i<n;i++)
        {
            mp[arr[i]]++;
        }
        priority_queue<pair<int,int>, vector<pair<int,int>>, comparator> pq;
        //priority_queue<pair<int,int>>pq;
        for(auto it:mp)
        {
            pq.push({it.second,it.first});
        }
        while(pq.size()>0)
        {
            int freq=pq.top().first;
            int ele=pq.top().second;
            for(int i=1;i<=freq;i++)
            {
                ans.push_back(ele);
            }
            pq.pop();
        }
        reverse(ans.begin(),ans.end());
        return ans;
    }
