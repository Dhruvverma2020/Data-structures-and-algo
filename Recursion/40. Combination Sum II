class Solution {
public:
    void solve(int idx,vector<int>& candidates,int target,vector<vector<int>>&ans,vector<int>&output,int n)
    {
        
            if(target==0)
            {
                 ans.push_back(output);
                  return;
            }
            for(int i=idx;i<n;i++)
            {
                if(i>idx&&candidates[i-1]==candidates[i])
                continue;
                if(candidates[i]>target)
                break;
                output.push_back(candidates[i]);
                solve(i+1,candidates,target-candidates[i],ans,output,n);
                output.pop_back();
            }
    }
    vector<vector<int>> combinationSum2(vector<int>& candidates, int target) 
    {
        int n=candidates.size();
        sort(candidates.begin(), candidates.end());
        vector<vector<int>> ans;
        vector<int>output;
        int idx=0;
        solve(idx,candidates,target,ans,output,n);
        return ans;
    }
};
