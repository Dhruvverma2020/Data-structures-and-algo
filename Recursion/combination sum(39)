class Solution {
public:
    void solve(int idx,vector<int>& candidates,int target,vector<vector<int>>&ans,vector<int>&output,int n)
    {
        if(idx==n)
        {
            if(target==0)
            {
                ans.push_back(output);
            }
            return;
        }
        if(candidates[idx]<=target)
        {
            output.push_back(candidates[idx]);
            solve(idx,candidates,target-candidates[idx],ans,output,n);
            output.pop_back();
        }
        solve(idx+1,candidates,target,ans,output,n);
    }
    vector<vector<int>> combinationSum(vector<int>& candidates, int target) 
    {
        int n=candidates.size();
        vector<vector<int>>ans;
        vector<int>output;
        int idx=0;
        solve(idx,candidates,target,ans,output,n);
        return ans;
    }
};
