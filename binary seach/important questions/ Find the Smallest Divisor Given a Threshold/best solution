    bool possible(vector<int>&nums,int k,int mid)
    {
        int sum=0;
        int n=nums.size();
        for(int i=0;i<n;i++)
        {
            sum=sum+ceil(double(nums[i])/(double)mid);
        }
        if(sum>k)
        {
            return false;
        }
        return true;
    }
    int smallestDivisor(vector<int>& nums, int k) 
    {
      int l=1;
      int r=*max_element(nums.begin(),nums.end());
      int ans=0;
      while(l<=r)
      {
          int mid=l+(r-l)/2;
          if(possible(nums,k,mid))
          {
              ans=mid;
              r=mid-1;
          }
          else
          {
              l=mid+1;
          }
      }
      return ans;
    }
};
