int timewithmidspeed(int mid,vector<int>&piles,int h)
   {
       int time=0;
       for(int i=0;i<piles.size();i++)
       {
        if(piles[i]<mid)
        time++;
        else if(piles[i]%mid==0)
         time+=(piles[i]/mid);
         else 
          time+=(piles[i]/mid)+1;
       }
       return time;
   }
    int Solve(int n, vector<int>& piles, int h) 
    {
        // Code here
        int l=1;
        int maxi=INT_MIN;
        for(int i=0;i<n;i++)
        {
            maxi=max(maxi,piles[i]);
        }
        int r=maxi;
        while(l<=r)
        {
            int mid=l+(r-l)/2;
            if(timewithmidspeed(mid,piles,h)<=h)
            {
                r=mid-1;
            }
            else
            {
                l=mid+1;
            }
        }
        return l;
    }
