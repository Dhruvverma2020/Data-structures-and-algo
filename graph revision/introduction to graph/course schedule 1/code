 vector<int> findOrder(int n, int m, vector<vector<int>> prerequisites) 
    {
        //code here
        vector<int>adj[n];
        for(int i=0;i<m;i++)
        {
            int a=prerequisites[i][0];
            int b=prerequisites[i][1];
            adj[b].push_back(a);
        }
        int count=0;
        vector<int>ans;
        queue<int>q;
        vector<int>indegree(n,0);
        for(int i=0;i<n;i++)
        {
            vector<int>data=adj[i];
            for(auto x:data)
            {
                indegree[x]++;
            }
        }
        for(int i=0;i<n;i++)
        {
            if(indegree[i]==0)
            {
                q.push(i);
            }
        }
        while(q.empty()==false)
        {
            int u=q.front();
            q.pop();
            count++;
            ans.push_back(u);
            for(auto x:adj[u])
            {
                indegree[x]--;
                if(indegree[x]==0)
                {
                    q.push(x);
                }
            }
        }
        if(count==n)
        {
            return ans;
        }
        return{};
    }
