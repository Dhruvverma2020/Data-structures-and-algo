 int n=grid.size();
        int m=grid[0].size();
        vector<vector<int>>dist(n,vector<int>(m,1e9));
        dist[s.first][s.second]=0;
        queue<pair<int,pair<int,int>>>q;
        q.push({0,{s.first,s.second}});
        int dr[]={-1,0,1,0};
        int dc[]={0,1,0,-1};
        while(q.empty()==false)
        {
            
            auto it=q.front();
            q.pop();
            int dis=it.first;
            int r=it.second.first;
            int c=it.second.second;
             if(r == destination.first && c == destination.second)
                    return dis;
            for(int i=0;i<4;i++)
            {
                int nrow=r+dr[i];
                int ncol=c+dc[i];
                if(nrow>=0&&nrow<n&&ncol>=0&&ncol<m&&grid[nrow][ncol]==1&&1+dis<dist[nrow][ncol])
                {
                    dist[nrow][ncol]=1+dis;
                     if(nrow==destination.first&&ncol==destination.second)
                    {
                        return dis+1;
                    }
                    q.push({1+dis,{nrow,ncol}});
                }
            }
        }
        return -1;
    }
