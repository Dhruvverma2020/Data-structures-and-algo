  int dr[]={+1,+1,-1,-1,-2,-2,+2,+2};
	    int dc[]={+2,-2,+2,-2,+1,-1,-1,+1};
	    queue<pair<int,pair<int,int>>>q;
	    q.push({0,{knight[0],knight[1]}});
	    vector<vector<int>>vis(n+1,vector<int>(n+1,0));
	    vis[knight[0]][knight[1]]=1;
	    while(q.empty()==false)
	    {
	        auto it=q.front();
	        q.pop();
	        int step=it.first;
	        int row=it.second.first;
	        int col=it.second.second;
	        if(row==target[0]&&col==target[1])
	        {
	            return step;
	        }
	        for(int i=0;i<8;i++)
	        {
	            int nrow=row+dr[i];
	            int ncol=col+dc[i];
	            if(nrow>=0&&nrow<=n&&ncol>=0&&ncol<=n&&vis[nrow][ncol]==0)
	            {
	                q.push({step+1,{nrow,ncol}});
	                vis[nrow][ncol]=1;
	            }
	        }
	    }
	    return -1;
