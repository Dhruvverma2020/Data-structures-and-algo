class Solution {
public:
    void dfsrec(vector<int>adj[],int s,vector<bool>&visited)
    {
        visited[s]=true;
        for(int x:adj[s])
        {
            if(visited[x]==false)
            {
                dfsrec(adj,x,visited);
            }
        }
    }
    int findCircleNum(vector<vector<int>>& isConnected) 
    {
        int n=isConnected.size();
        vector<int>adj[n];
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<n;j++)
            {
              if(isConnected[i][j]==1&&i!=j)
              {
                  adj[i].push_back(j);
                  adj[j].push_back(i);
              }
            }
        }
        vector<bool>visited(n+1,false);
        int ans=0;
        for(int i=0;i<n;i++)
        {
            if(visited[i]==false)
            {
              ans++;
              dfsrec(adj,i,visited);
            }
        }
        return ans;
    }
};
