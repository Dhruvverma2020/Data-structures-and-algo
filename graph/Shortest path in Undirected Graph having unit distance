// User function Template for C++
class Solution {
  public:
    vector<int> shortestPath(vector<vector<int>>& edges, int n,int m, int s)
    {
        // code here
        vector<int>adj[n];

         for(int i=0;i<m;i++)
         {
             int u=edges[i][0];
             int v=edges[i][1];
             adj[u].push_back(v);
             adj[v].push_back(u);
         }
         vector<int>dist(n,-1);
         queue<int>q;
         dist[s]=0;
         q.push(s);
         while(q.empty()==false)
         {
             int u=q.front();
             q.pop();
             for(auto x:adj[u])
             {
                 if(dist[x]==-1||dist[u]<dist[x])
                 {
                     dist[x]=dist[u]+1;
                     //visited[x]=true;
                     q.push(x);
                 }
             }
         }
         return dist;
    }
};
