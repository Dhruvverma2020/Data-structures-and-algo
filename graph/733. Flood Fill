class Solution {
public:
    bool isvalid(int i,int j,int n,int m,vector<vector<int>>& image,int color,int cool)
    {
        if(i>=0&&i<n&&j>=0&&j<m&&image[i][j]==cool)
        {
            return true;
        }
        return false;
    }
    void dfsrec(int i,int j,int n,int m,vector<vector<int>>& image,int color,int cool)
    {
        image[i][j]=color;
        if(isvalid(i+1,j,n,m,image,color,cool))
        {
            dfsrec(i+1,j,n,m,image,color,cool);
        }
         if(isvalid(i-1,j,n,m,image,color,cool))
        {
            dfsrec(i-1,j,n,m,image,color,cool);
        }
         if(isvalid(i,j+1,n,m,image,color,cool))
        {
            dfsrec(i,j+1,n,m,image,color,cool);
        }
         if(isvalid(i,j-1,n,m,image,color,cool))
        {
            dfsrec(i,j-1,n,m,image,color,cool);
        }
    }
    vector<vector<int>> floodFill(vector<vector<int>>& image, int sr, int sc, int color) 
    {
        int n=image.size();
        int m=image[0].size();
        int cool=image[sr][sc];
         if(cool==color)
        {
            return image;
        }
        else
        {
            dfsrec(sr,sc,n,m,image,color,cool);
        }
        return image;

    }
};
